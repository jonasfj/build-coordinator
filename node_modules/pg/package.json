{
  "name": "pg",
  "version": "1.0.0",
  "description": "alias for pg.js to force Knex to use pure-JS PostgreSQL bindings",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/WhoopInc/node-pg"
  },
  "author": {
    "name": "Whoop, Inc."
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/WhoopInc/node-pg/issues"
  },
  "homepage": "https://github.com/WhoopInc/node-pg",
  "readme": "# node-pg\n\nA `pg` alias for [pg.js][pg.js].\n\n## Why?\nThe fantastic [pg](https://github.com/brianc/node-postgres) package\nbundles both native and pure JavaScript bindings for PostgreSQL. This\nmeans you have to compile the native bindings, whether you want them or\nnot.\n\nTo compensate, [pg.js][pg.js] bundles only the JavaScript bindings. This is\ngreat until you use a library like [Knex][knex], which is hard-coded to import a\nlibrary called `pg`.\n\nSo this package aliases `pg` to `pg.js` to trick Knex into importing the right\npackage.\n\n## Usage\n\nnode-pg exports whatever version of pg.js you depend on in your\n`package.json`.\n\nIf you forget to depend on pg.js yourself, node-pg will blow up when you try to\n`require` it.\n\n#### package.json\n```json\n{\n  \"dependencies\": {\n    \"pg\": \"git+https://github.com/WhoopInc/node-pg.git#1.0.0\",\n    \"pg.js\": \"x.x.x\",\n    \"...\"\n  }\n}\n```\n\n#### *.js\n```javascript\nvar pg = require(\"pg\");\n// `pg` is now vx.x.x of the pg.js package. No native bindings! Shh!\n```\n\n[pg.js]: https://github.com/brianc/node-postgres-pure\n[knex]: https://github.com/tgriesser/knex\n[peer-dep]: http://blog.nodejs.org/2013/02/07/peer-dependencies/\n",
  "readmeFilename": "README.md",
  "_id": "pg@1.0.0",
  "dist": {
    "shasum": "9b541add649c0d2336ea727c88278cc0c9b27052"
  },
  "_resolved": "git+https://github.com/WhoopInc/node-pg-pure-alias.git#b534f82c418db03720c97465596aa267b936c089",
  "_from": "pg@git+https://github.com/WhoopInc/node-pg-pure-alias.git#1.0.0"
}
